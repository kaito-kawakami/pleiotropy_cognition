#!/bin/bash
#SBATCH --job-name=mixer_bivar_fig_all
#SBATCH --output=mixer_bivar_fig_all-%j.txt
#SBATCH --error=mixer_bivar_fig_all-%j.txt
#SBATCH --time=08:00:00
#SBATCH --partition=interruptible_cpu
#SBATCH --cpus-per-task=25
#SBATCH --mem-per-cpu=10G
#SBATCH --ntasks=1

# Set up common directories and Singularity image path.
export COMORMENT="/cephfs/volumes/hpc_data_usr/k20051211/8e486e0b-f00f-4534-8dcc-d66a07c10fd5/mixer"
export SINGULARITY_BIND="$COMORMENT/mixer/reference:/REF:ro"
export SIF="$COMORMENT/mixer/singularity"
export MIXER_COMMON_ARGS="--ld-file /REF/ldsc/1000G_EUR_Phase3_plink/1000G.EUR.QC.@.run4.ld --bim-file /REF/ldsc/1000G_EUR_Phase3_plink/1000G.EUR.QC.@.bim --threads 25"
export PYTHON="singularity exec --home $PWD:/home $SIF/mixer.sif python"

# Directories for univariate and bivariate outputs.
uni_out="/cephfs/volumes/hpc_data_usr/k20051211/8e486e0b-f00f-4534-8dcc-d66a07c10fd5/mixer/mixer/mixer_output"
bivar_out="/cephfs/volumes/hpc_data_usr/k20051211/8e486e0b-f00f-4534-8dcc-d66a07c10fd5/mixer/mixer/bivariate_rerun"
figures_dir="${COMORMENT}/mixer/mixer_figures"
mkdir -p "${figures_dir}"

# Purge any loaded modules, if needed.
module purge

# Define your trait pairs.
trait_pairs=(
  "memory prospective"
  "memory symbol"
  "memory numeric"
  "memory tmtb"
  "memory vnr"
  "rt prospective"
  "rt symbol"
  "rt numeric"
  "rt tmtb"
  "rt vnr"
  "prospective symbol"
  "prospective numeric"
  "prospective tmtb"
  "prospective vnr"
  "symbol numeric"
  "symbol tmtb"
  "symbol vnr"
  "numeric tmtb"
  "numeric vnr"
  "tmtb vnr"
)

# Loop over each trait pair.
for pair in "${trait_pairs[@]}"; do
    # Split the pair into trait1 and trait2.
    trait1=$(echo "$pair" | cut -d ' ' -f 1)
    trait2=$(echo "$pair" | cut -d ' ' -f 2)
    base="${trait1}_vs_${trait2}"

    echo "Processing trait pair: ${trait1} vs ${trait2}"

    # Combine the fit files.
    $PYTHON /tools/mixer/precimed/mixer_figures.py combine \
      --json "$bivar_out/${base}.fit.rep@.json" \
      --out "$figures_dir/${base}.fit"

    # Combine the test files.
    $PYTHON /tools/mixer/precimed/mixer_figures.py combine \
      --json "$bivar_out/${base}.test.rep@.json" \
      --out "$figures_dir/${base}.test"

    # Generate the two-panel figure.
    $PYTHON /tools/mixer/precimed/mixer_figures.py two \
      --json-fit "$figures_dir/${base}.fit.json" \
      --json-test "$figures_dir/${base}.test.json" \
      --out "$figures_dir/${base}" \
      --trait1 "$trait1" \
      --trait2 "$trait2" \
      --statistic mean std \
      --ext svg
done
